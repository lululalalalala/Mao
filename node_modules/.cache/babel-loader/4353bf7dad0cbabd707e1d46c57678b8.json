{"ast":null,"code":"export default {\n  data() {\n    return {\n      chores: [{\n        id: 1,\n        title: \"铲屎\",\n        list: 1\n      }, {\n        id: 2,\n        title: \"梳毛\",\n        list: 1\n      }, {\n        id: 3,\n        title: \"陪玩\",\n        list: 1\n      }, {\n        id: 4,\n        title: \"量体温\",\n        list: 3\n      }, {\n        id: 5,\n        title: \"添粮\",\n        list: 2\n      }, {\n        id: 6,\n        title: \"换水\",\n        list: 2\n      }],\n      draggedItem: \"\"\n    };\n  },\n\n  computed: {\n    listOne() {\n      return this.chores.filter(chore => chore.list === 1);\n    },\n\n    listTwo() {\n      return this.chores.filter(chore => chore.list === 2);\n    },\n\n    listThree() {\n      return this.chores.filter(chore => chore.list === 3);\n    }\n\n  },\n  methods: {\n    dragStart: (event, chore) => {\n      event.dataTransfer.dropEffect = \"move\";\n      event.dataTransfer.effectAllowed = \"move\";\n      event.dataTransfer.setData(\"choreId\", chore.id);\n      event.style.opacity = 0.5;\n    },\n    dragEnter: event => {\n      if (event.className == \"dropzone\") {\n        event.style.background = \"pink\";\n      }\n    },\n    dragLeave: event => {\n      if (event.className == \"dropzone\") {\n        event.style.background = \"\";\n      }\n    },\n    drop: (event, list) => {\n      // if (event.className == \"dropzone\") {\n      //   event.style.background = \"\";\n      //   this.draggedItem.parentNode.removeChild(this.draggedItem);\n      //   event.appendChild(this.draggedItem);\n      const choreID = event.dataTransfer.getData(\"choreID\");\n      const chore = this.chores.find(chore => chore.id == choreID);\n      chore.list = list; // }\n    }\n  }\n};","map":{"version":3,"mappings":"AA2DA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAE,CACN;QACEC,EAAE,EAAE,CADN;QAEEC,KAAK,EAAE,IAFT;QAGEC,IAAI,EAAE;MAHR,CADM,EAMN;QACEF,EAAE,EAAE,CADN;QAEEC,KAAK,EAAE,IAFT;QAGEC,IAAI,EAAE;MAHR,CANM,EAWN;QACEF,EAAE,EAAE,CADN;QAEEC,KAAK,EAAE,IAFT;QAGEC,IAAI,EAAE;MAHR,CAXM,EAgBN;QACEF,EAAE,EAAE,CADN;QAEEC,KAAK,EAAE,KAFT;QAGEC,IAAI,EAAE;MAHR,CAhBM,EAqBN;QACEF,EAAE,EAAE,CADN;QAEEC,KAAK,EAAE,IAFT;QAGEC,IAAI,EAAE;MAHR,CArBM,EA0BN;QACEF,EAAE,EAAE,CADN;QAEEC,KAAK,EAAE,IAFT;QAGEC,IAAI,EAAE;MAHR,CA1BM,CADH;MAiCLC,WAAW,EAAE;IAjCR,CAAP;EAmCD,CArCY;;EAsCbC,QAAQ,EAAE;IACRC,OAAO,GAAG;MACR,OAAO,KAAKN,MAAL,CAAYO,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACL,IAAN,KAAe,CAA7C,CAAP;IACD,CAHO;;IAIRM,OAAO,GAAG;MACR,OAAO,KAAKT,MAAL,CAAYO,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACL,IAAN,KAAe,CAA7C,CAAP;IACD,CANO;;IAORO,SAAS,GAAG;MACV,OAAO,KAAKV,MAAL,CAAYO,MAAZ,CAAoBC,KAAD,IAAWA,KAAK,CAACL,IAAN,KAAe,CAA7C,CAAP;IACD;;EATO,CAtCG;EAiDbQ,OAAO,EAAE;IACPC,SAAS,EAAE,CAACC,KAAD,EAAQL,KAAR,KAAkB;MAC3BK,KAAK,CAACC,YAAN,CAAmBC,UAAnB,GAAgC,MAAhC;MACAF,KAAK,CAACC,YAAN,CAAmBE,aAAnB,GAAmC,MAAnC;MACAH,KAAK,CAACC,YAAN,CAAmBG,OAAnB,CAA2B,SAA3B,EAAsCT,KAAK,CAACP,EAA5C;MACAY,KAAK,CAACK,KAAN,CAAYC,OAAZ,GAAsB,GAAtB;IACD,CANM;IAOPC,SAAS,EAAGP,KAAD,IAAW;MACpB,IAAIA,KAAK,CAACQ,SAAN,IAAmB,UAAvB,EAAmC;QACjCR,KAAK,CAACK,KAAN,CAAYI,UAAZ,GAAyB,MAAzB;MACF;IACD,CAXM;IAYPC,SAAS,EAAGV,KAAD,IAAW;MACpB,IAAIA,KAAK,CAACQ,SAAN,IAAmB,UAAvB,EAAmC;QACjCR,KAAK,CAACK,KAAN,CAAYI,UAAZ,GAAyB,EAAzB;MACF;IACD,CAhBM;IAiBPE,IAAI,EAAE,CAACX,KAAD,EAAQV,IAAR,KAAiB;MACrB;MACA;MACA;MACA;MACA,MAAMsB,OAAM,GAAIZ,KAAK,CAACC,YAAN,CAAmBY,OAAnB,CAA2B,SAA3B,CAAhB;MACA,MAAMlB,KAAI,GAAI,KAAKR,MAAL,CAAY2B,IAAZ,CAAkBnB,KAAD,IAAWA,KAAK,CAACP,EAAN,IAAYwB,OAAxC,CAAd;MACAjB,KAAK,CAACL,IAAN,GAAaA,IAAb,CAPqB,CAQrB;IACD;EA1BM;AAjDI,CAAf","names":["data","chores","id","title","list","draggedItem","computed","listOne","filter","chore","listTwo","listThree","methods","dragStart","event","dataTransfer","dropEffect","effectAllowed","setData","style","opacity","dragEnter","className","background","dragLeave","drop","choreID","getData","find"],"sourceRoot":"","sources":["D:\\vue\\Mao\\src\\components\\layouts\\ToDoList.vue"],"sourcesContent":["<template>\r\n  <div class=\"to-do-list-wrapper\">\r\n    <h3>每日待办事项</h3>\r\n    <span>所有事项</span>\r\n    <list-sets>\r\n      <li\r\n        v-for=\"chore in listOne\"\r\n        :key=\"chore.id\"\r\n        draggable=\"true\"\r\n        @dragstart=\"dragStart($event, chore)\"\r\n        @drop=\"drop\"\r\n      >\r\n        {{ chore.title }}\r\n      </li>\r\n    </list-sets>\r\n    <div\r\n      class=\"finished dropzone\"\r\n      @dragover.prevent\r\n      @dragenter=\"dragEnter\"\r\n      @dragleave=\"dragLeave\"\r\n      @drop=\"drop\"\r\n    >\r\n      <span>已完成</span>\r\n      <list-sets>\r\n        <li\r\n          v-for=\"chore in listTwo\"\r\n          :key=\"chore.id\"\r\n          draggable=\"true\"\r\n          @dragstart=\"dragStart($event, chore)\"\r\n          @drop=\"drop($event, 1)\"\r\n        >\r\n          {{ chore.title }}\r\n        </li>\r\n      </list-sets>\r\n    </div>\r\n    <div\r\n      class=\"unfinished dropzone\"\r\n      @dragover.prevent\r\n      @dragenter=\"dragEnter\"\r\n      @dragleave=\"dragLeave\"\r\n      @drop=\"drop($event, 1)\"\r\n    >\r\n      <span>未完成</span>\r\n      <list-sets>\r\n        <li\r\n          v-for=\"chore in listThree\"\r\n          :key=\"chore.id\"\r\n          draggable=\"true\"\r\n          @dragstart=\"dragStart($event, chore)\"\r\n          @drop=\"drop($event, 1)\"\r\n        >\r\n          {{ chore.title }}\r\n        </li>\r\n      </list-sets>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      chores: [\r\n        {\r\n          id: 1,\r\n          title: \"铲屎\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"梳毛\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"陪玩\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 4,\r\n          title: \"量体温\",\r\n          list: 3,\r\n        },\r\n        {\r\n          id: 5,\r\n          title: \"添粮\",\r\n          list: 2,\r\n        },\r\n        {\r\n          id: 6,\r\n          title: \"换水\",\r\n          list: 2,\r\n        },\r\n      ],\r\n      draggedItem: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    listOne() {\r\n      return this.chores.filter((chore) => chore.list === 1);\r\n    },\r\n    listTwo() {\r\n      return this.chores.filter((chore) => chore.list === 2);\r\n    },\r\n    listThree() {\r\n      return this.chores.filter((chore) => chore.list === 3);\r\n    },\r\n  },\r\n  methods: {\r\n    dragStart: (event, chore) => {\r\n      event.dataTransfer.dropEffect = \"move\";\r\n      event.dataTransfer.effectAllowed = \"move\";\r\n      event.dataTransfer.setData(\"choreId\", chore.id);\r\n      event.style.opacity = 0.5;\r\n    },\r\n    dragEnter: (event) => {\r\n      if (event.className == \"dropzone\") {\r\n        event.style.background = \"pink\";\r\n      }\r\n    },\r\n    dragLeave: (event) => {\r\n      if (event.className == \"dropzone\") {\r\n        event.style.background = \"\";\r\n      }\r\n    },\r\n    drop: (event, list) => {\r\n      // if (event.className == \"dropzone\") {\r\n      //   event.style.background = \"\";\r\n      //   this.draggedItem.parentNode.removeChild(this.draggedItem);\r\n      //   event.appendChild(this.draggedItem);\r\n      const choreID = event.dataTransfer.getData(\"choreID\");\r\n      const chore = this.chores.find((chore) => chore.id == choreID);\r\n      chore.list = list;\r\n      // }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.to-do-list-wrapper {\r\n  margin-left: 300px;\r\n  padding-top: 100px;\r\n  text-align: center;\r\n  width: 200px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
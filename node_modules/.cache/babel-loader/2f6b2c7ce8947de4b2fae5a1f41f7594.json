{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-05d84a1a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"to-do-list-wrapper\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"每日待办事项\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"undefined dropzone\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"未定义\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = [\"onDragstart\"];\nconst _hoisted_6 = {\n  class: \"finished dropzone\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"已完成\", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = [\"onDragstart\"];\nconst _hoisted_9 = {\n  class: \"unfinished dropzone\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"未完成\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = [\"onDragstart\"];\nexport function render(_ctx, _cache) {\n  const _component_list_sets = _resolveComponent(\"list-sets\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createVNode(_component_list_sets, {\n    onDrop: _cache[0] || (_cache[0] = $event => _ctx.drop($event, 1))\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.listOne, item => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: item.id,\n        draggable: \"true\",\n        onDragstart: $event => _ctx.dragStart($event, item)\n      }, _toDisplayString(item.title), 41\n      /* TEXT, PROPS, HYDRATE_EVENTS */\n      , _hoisted_5);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  })]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createVNode(_component_list_sets, {\n    onDrop: _cache[1] || (_cache[1] = $event => _ctx.drop($event, 2))\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.listTwo, item => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: item.id,\n        draggable: \"true\",\n        onDragstart: $event => _ctx.dragStart($event, item)\n      }, _toDisplayString(item.title), 41\n      /* TEXT, PROPS, HYDRATE_EVENTS */\n      , _hoisted_8);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  })]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createVNode(_component_list_sets, {\n    onDrop: _cache[2] || (_cache[2] = $event => _ctx.drop($event, 3))\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.listThree, item => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: item.id,\n        draggable: \"true\",\n        onDragstart: $event => _ctx.dragStart($event, item)\n      }, _toDisplayString(item.title), 41\n      /* TEXT, PROPS, HYDRATE_EVENTS */\n      , _hoisted_11);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  })])]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;gEACTC,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU;AAAA;AAAV;;;EACKD,KAAK,EAAC;;;gEACTC,oBAAgB,MAAhB,EAAgB,IAAhB,EAAM,KAAN,EAAS;AAAA;AAAT;;;;EAYGD,KAAK,EAAC;;;gEACTC,oBAAgB,MAAhB,EAAgB,IAAhB,EAAM,KAAN,EAAS;AAAA;AAAT;;;;EAYGD,KAAK,EAAC;;;iEACTC,oBAAgB,MAAhB,EAAgB,IAAhB,EAAM,KAAN,EAAS;AAAA;AAAT;;;;;;uBA7BJC,oBAyCM,KAzCN,cAyCM,CAxCJC,UAwCI,EAvCJF,oBAYM,KAZN,cAYM,CAXJG,UAWI,EAVJC,aASYC,oBATZ,EASY;IATAC,MAAI,sCAAEC,UAAKC,MAAL,EAAW,CAAX,CAAF;EASJ,CATZ;sBAEI,MAAuB,oBADzBP,oBAOKQ,SAPL,EAOK,IAPL,EAOKC,YANYH,YAMZ,EANII,IAAe,IAAX;2BADbV,oBAOK,IAPL,EAOK;QALFW,GAAG,EAAED,IAAI,CAACE,EAKR;QAJHC,SAAS,EAAC,MAIP;QAHFC,WAAS,YAAER,eAAUC,MAAV,EAAkBG,IAAlB;MAGT,CAPL,mBAMKA,IAAI,CAACK,MANV,EAMe;MAAA;MANf,EAMeC,UANf;KAOK,CAPL;;IAAA,CACyB;;;;GAF3B,CAUI,CAZN,CAuCI,EA1BJjB,oBAYM,KAZN,cAYM,CAXJkB,UAWI,EAVJd,aASYC,oBATZ,EASY;IATAC,MAAI,sCAAEC,UAAKC,MAAL,EAAW,CAAX,CAAF;EASJ,CATZ;sBAEI,MAAuB,oBADzBP,oBAOKQ,SAPL,EAOK,IAPL,EAOKC,YANYH,YAMZ,EANII,IAAe,IAAX;2BADbV,oBAOK,IAPL,EAOK;QALFW,GAAG,EAAED,IAAI,CAACE,EAKR;QAJHC,SAAS,EAAC,MAIP;QAHFC,WAAS,YAAER,eAAUC,MAAV,EAAkBG,IAAlB;MAGT,CAPL,mBAMKA,IAAI,CAACK,MANV,EAMe;MAAA;MANf,EAMeG,UANf;KAOK,CAPL;;IAAA,CACyB;;;;GAF3B,CAUI,CAZN,CA0BI,EAbJnB,oBAYM,KAZN,cAYM,CAXJoB,WAWI,EAVJhB,aASYC,oBATZ,EASY;IATAC,MAAI,sCAAEC,UAAKC,MAAL,EAAW,CAAX,CAAF;EASJ,CATZ;sBAEI,MAAyB,oBAD3BP,oBAOKQ,SAPL,EAOK,IAPL,EAOKC,YANYH,cAMZ,EANII,IAAiB,IAAb;2BADbV,oBAOK,IAPL,EAOK;QALFW,GAAG,EAAED,IAAI,CAACE,EAKR;QAJHC,SAAS,EAAC,MAIP;QAHFC,WAAS,YAAER,eAAUC,MAAV,EAAkBG,IAAlB;MAGT,CAPL,mBAMKA,IAAI,CAACK,MANV,EAMe;MAAA;MANf,EAMeK,WANf;KAOK,CAPL;;IAAA,CAC2B;;;;GAF7B,CAUI,CAZN,CAaI,CAzCN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_hoisted_4","_createVNode","_component_list_sets","onDrop","_ctx","$event","_Fragment","_renderList","item","key","id","draggable","onDragstart","title","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_10","_hoisted_11"],"sourceRoot":"","sources":["D:\\vue\\Mao\\src\\components\\layouts\\ToDoList.vue"],"sourcesContent":["<template>\r\n  <div class=\"to-do-list-wrapper\">\r\n    <h3>每日待办事项</h3>\r\n    <div class=\"undefined dropzone\">\r\n      <span>未定义</span>\r\n      <list-sets @drop=\"drop($event, 1)\">\r\n        <li\r\n          v-for=\"item in listOne\"\r\n          :key=\"item.id\"\r\n          draggable=\"true\"\r\n          @dragstart=\"dragStart($event, item)\"\r\n        >\r\n          {{ item.title }}\r\n        </li>\r\n      </list-sets>\r\n    </div>\r\n    <div class=\"finished dropzone\">\r\n      <span>已完成</span>\r\n      <list-sets @drop=\"drop($event, 2)\">\r\n        <li\r\n          v-for=\"item in listTwo\"\r\n          :key=\"item.id\"\r\n          draggable=\"true\"\r\n          @dragstart=\"dragStart($event, item)\"\r\n        >\r\n          {{ item.title }}\r\n        </li>\r\n      </list-sets>\r\n    </div>\r\n    <div class=\"unfinished dropzone\">\r\n      <span>未完成</span>\r\n      <list-sets @drop=\"drop($event, 3)\">\r\n        <li\r\n          v-for=\"item in listThree\"\r\n          :key=\"item.id\"\r\n          draggable=\"true\"\r\n          @dragstart=\"dragStart($event, item)\"\r\n        >\r\n          {{ item.title }}\r\n        </li>\r\n      </list-sets>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [\r\n        {\r\n          id: 1,\r\n          title: \"铲屎\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"梳毛\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"陪玩\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 4,\r\n          title: \"量体温\",\r\n          list: 3,\r\n        },\r\n        {\r\n          id: 5,\r\n          title: \"添粮\",\r\n          list: 2,\r\n        },\r\n        {\r\n          id: 6,\r\n          title: \"换水\",\r\n          list: 2,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    listOne() {\r\n      return this.items.filter((item) => item.list === 1);\r\n    },\r\n    listTwo() {\r\n      return this.items.filter((item) => item.list === 2);\r\n    },\r\n    listThree() {\r\n      return this.items.filter((item) => item.list === 3);\r\n    },\r\n  },\r\n  methods: {\r\n    dragStart: (evt, item) => {\r\n      evt.dataTransfer.dropEffect = \"move\";\r\n      evt.dataTransfer.effectAllowed = \"move\";\r\n      evt.dataTransfer.setData(\"itemID\", item.id);\r\n    },\r\n    drop(evt, listID) {\r\n      const itemID = evt.dataTransfer.getData('itemID')\r\n      const item = this.items.find(item => item.id == itemID)\r\n      item.list = listID\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.to-do-list-wrapper {\r\n  margin-left: 300px;\r\n  padding-top: 100px;\r\n  text-align: center;\r\n  width: 200px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-05d84a1a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"to-do-list-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"drop-zone\"\n};\nconst _hoisted_3 = [\"onDragstart\"];\nconst _hoisted_4 = {\n  class: \"drop-zone\"\n};\nconst _hoisted_5 = [\"onDragstart\"];\nconst _hoisted_6 = {\n  class: \"drop-zone\"\n};\nconst _hoisted_7 = [\"onDragstart\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.listOne, chore => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: chore.id,\n      class: \"drag-el\",\n      draggable: \"\",\n      onDragstart: $event => $options.startDrag($event, chore)\n    }, _toDisplayString(chore.title), 41\n    /* TEXT, PROPS, HYDRATE_EVENTS */\n    , _hoisted_3);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.listTwo, chore => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: chore.id,\n      class: \"drag-el\",\n      droppable: \"\",\n      onDragstart: $event => $options.startDrag($event, chore)\n    }, _toDisplayString(chore.title), 41\n    /* TEXT, PROPS, HYDRATE_EVENTS */\n    , _hoisted_5);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.listThree, chore => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: chore.id,\n      class: \"drag-el\",\n      draggable: \"\",\n      onDragstart: $event => $options.startDrag($event, chore)\n    }, _toDisplayString(chore.title), 41\n    /* TEXT, PROPS, HYDRATE_EVENTS */\n    , _hoisted_7);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;EAEFA,KAAK,EAAC;;;;EAWNA,KAAK,EAAC;;;;EAWNA,KAAK,EAAC;;;;uBAxBfC,oBAoCM,KApCN,cAoCM,CAnCJC,oBAkCM,KAlCN,EAkCM,IAlCN,EAkCM,CAjCJA,oBAUM,KAVN,cAUM,oBATJD,oBAQME,SARN,EAQM,IARN,EAQMC,YAPYC,gBAOZ,EAPGC,KAAgB,IAAX;yBADdL,oBAQM,KARN,EAQM;MANHM,GAAG,EAAED,KAAK,CAACE,EAMR;MALJR,KAAK,EAAC,SAKF;MAJJS,SAAS,EAAT,EAII;MAHHC,WAAS,YAAEL,mBAAUM,MAAV,EAAkBL,KAAlB;IAGR,CARN,mBAOKA,KAAK,CAACM,MAPX,EAOgB;IAAA;IAPhB,EAOgBC,UAPhB;GAQM,CARN;;EAAA,CASI,EAVN,CAiCI,EAtBJX,oBAUM,KAVN,cAUM,oBATJD,oBAQME,SARN,EAQM,IARN,EAQMC,YAPYC,gBAOZ,EAPGC,KAAgB,IAAX;yBADdL,oBAQM,KARN,EAQM;MANHM,GAAG,EAAED,KAAK,CAACE,EAMR;MALJR,KAAK,EAAC,SAKF;MAJJc,SAAS,EAAT,EAII;MAHHJ,WAAS,YAAEL,mBAAUM,MAAV,EAAkBL,KAAlB;IAGR,CARN,mBAOKA,KAAK,CAACM,MAPX,EAOgB;IAAA;IAPhB,EAOgBG,UAPhB;GAQM,CARN;;EAAA,CASI,EAVN,CAsBI,EAXJb,oBAUM,KAVN,cAUM,oBATJD,oBAQME,SARN,EAQM,IARN,EAQMC,YAPYC,kBAOZ,EAPGC,KAAkB,IAAb;yBADdL,oBAQM,KARN,EAQM;MANHM,GAAG,EAAED,KAAK,CAACE,EAMR;MALJR,KAAK,EAAC,SAKF;MAJJS,SAAS,EAAT,EAII;MAHHC,WAAS,YAAEL,mBAAUM,MAAV,EAAkBL,KAAlB;IAGR,CARN,mBAOKA,KAAK,CAACM,MAPX,EAOgB;IAAA;IAPhB,EAOgBI,UAPhB;GAQM,CARN;;EAAA,CASI,EAVN,CAWI,CAlCN,CAmCI,CApCN","names":["class","_createElementBlock","_createElementVNode","_Fragment","_renderList","$options","chore","key","id","draggable","onDragstart","$event","title","_hoisted_3","droppable","_hoisted_5","_hoisted_7"],"sourceRoot":"","sources":["D:\\vue\\Mao\\src\\components\\layouts\\ToDoList.vue"],"sourcesContent":["<template>\r\n  <div class=\"to-do-list-wrapper\">\r\n    <div>\r\n      <div class=\"drop-zone\">\r\n        <div\r\n          v-for=\"chore in listOne\"\r\n          :key=\"chore.id\"\r\n          class=\"drag-el\"\r\n          draggable\r\n          @dragstart=\"startDrag($event, chore)\"\r\n        >\r\n          {{ chore.title }}\r\n        </div>\r\n      </div>\r\n      <div class=\"drop-zone\">\r\n        <div\r\n          v-for=\"chore in listTwo\"\r\n          :key=\"chore.id\"\r\n          class=\"drag-el\"\r\n          droppable\r\n          @dragstart=\"startDrag($event, chore)\"\r\n        >\r\n          {{ chore.title }}\r\n        </div>\r\n      </div>\r\n      <div class=\"drop-zone\">\r\n        <div\r\n          v-for=\"chore in listThree\"\r\n          :key=\"chore.id\"\r\n          class=\"drag-el\"\r\n          draggable\r\n          @dragstart=\"startDrag($event, chore)\"\r\n        >\r\n          {{ chore.title }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      chores: [\r\n        {\r\n          id: 1,\r\n          title: \"铲屎\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"梳毛\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"陪玩\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 4,\r\n          title: \"量体温\",\r\n          list: 2,\r\n        },\r\n        {\r\n          id: 5,\r\n          title: \"添粮\",\r\n          list: 1,\r\n        },\r\n        {\r\n          id: 6,\r\n          title: \"换水\",\r\n          list: 3,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    listOne() {\r\n      return this.chores.filter((chore) => chore.list === 1);\r\n    },\r\n    listTwo() {\r\n      return this.chores.filter((chore) => chore.list === 2);\r\n    },\r\n    listThree() {\r\n      return this.chores.filter((chore) => chore.list === 3);\r\n    },\r\n  },\r\n  methods: {\r\n    startDrag: (event, chore) => {\r\n      event.dataTransfer.dropEffect = \"move\";\r\n      event.dataTransfer.effectAllowed = \"move\";\r\n      event.dataTransfer.setData(\"choreID\", chore.id);\r\n    },\r\n    onDrop(evt, list) {\r\n      const choreID = evt.dataTransfer.getData(\"choreID\");\r\n      const chore = this.chores.find((chore) => chore.id == choreID);\r\n      chore.list = list;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.to-do-list-wrapper {\r\n  margin-left: 300px;\r\n  padding-top: 100px;\r\n  text-align: center;\r\n  width: 200px;\r\n}\r\n.drop-zone {\r\n  background-color: #eee;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n}\r\n\r\n.drag-el {\r\n  background-color: #fff;\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}